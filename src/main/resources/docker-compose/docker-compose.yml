version: "3.8"
services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.11-management
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    # rabbitmq-plugins enable rabbitmq_management
    ports:
      - "5672:5672"
      - "15672:15672"

  redis:
    container_name: redis
    image: redis:6.0
    hostname: redis
    ports:
      - "6379:6379"

  sftp:
    container_name: sftp
    image: atmoz/sftp
    # volumes:
    #     - ~/upload:/home/foo/upload
    ports:
      - "2222:22"
    command: user:password:::upload

  ftp:
    container_name: vsftpd
    image: fauria/vsftpd
    environment:
      FTP_USER: user
      FTP_PASS: pass
      LOG_STDOUT: yes
      PASV_ADDRESS: 127.0.0.1
      PASV_MIN_PORT: 21100
      PASV_MAX_PORT: 21110
    ports:
      - "8021:21"
      - "21100-21110:21100-21110"

  postgresql:
    image: postgres:16
    hostname: postgresql
    container_name: postgresql1
    ports:
      - "5432:5432"
    expose:
      - "5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=5432
      - POSTGRES_DB=bookingstore

  kafka1:
    image: confluentinc/cp-kafka
    container_name: kafka1
    hostname: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT'
      KAFKA_LISTENERS: 'INTERNAL://kafka1:29092,CONTROLLER://kafka1:29093,EXTERNAL://0.0.0.0:9092'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://kafka1:29092,EXTERNAL://localhost:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka1:29093'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      CLUSTER_ID: 'ciWo7IWazngRchmPES6q5A=='
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    hostname: kafka-ui
    ports:
      - "9080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'kafka1:29092'
      DYNAMIC_CONFIG_ENABLED: 'true'
    depends_on:
      - kafka1

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: elasticsearch1
    hostname: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g        # if you can spare RAM
    ulimits:
      memlock:
        soft: -1
        hard: -1    # adjust if you have more RAM
    ports:
      - "9200:9200"   # HTTP
      - "9300:9300"   # transport
    healthcheck:
      test: [ "CMD-SHELL", "curl -fsS http://localhost:9200 >/dev/null || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 30


