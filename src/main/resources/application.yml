server:
  port: 8080
spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/bookingstore
    username: postgres
    password: postgres
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate.format_sql: true
      hibernate.jdbc.time_zone: UTC
  flyway:
    enabled: true
    baseline-on-migrate: true
    validate-on-migrate: true
    clean-on-validation-error: true
    clean-disabled: false
    debug: true

  kafka:
    client-id: bookstore-service
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 5
      properties:
        enable.idempotence: true
        max.in.flight.requests.per.connection: 5
        linger.ms: 10
        batch.size: 32768
        # Json
        spring.json.add.type.headers: true
        spring.json.write_dates_as_timestamps: false
    consumer:
      group-id: ${KAFKA_GROUP:bookstore-writer}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: latest
      properties:
        spring.json.trusted.packages: "*"
        spring.json.use.type.headers: true
      max-poll-records: 500

      listener:
          ack-mode: record
          concurrency: 3

      admin:
          fail-fast: true

  cache:
    type: redis
    data:
      redis:
        host: localhost
        port: 6379

  elasticsearch:
    uris: ${SPRING_ELASTICSEARCH_URIS:http://localhost:9200}
logging:
  level:
    org.hibernate.SQL: INFO
    org.springframework.data.elasticsearch.client.elc: TRACE
    org.springframework.cache: TRACE
    org.springframework.data.redis: DEBUG
app:
  cache:
    booksByIdTtlSeconds: 3600
  kafka:
    topics:
      book:
        events: book.events

  search:
    reindex-on-start: true
    recreate-index-on-start: false
    reindex:
      batch-size: 1000
      fail-on-error: false

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  metrics:
    tags:
      application: bookstore-service
    distribution:
      percentiles-histogram:
        http.server.requests: true
  endpoint:
    health:
      show-details: always

  prometheus:
    metrics:
      export:
        enabled: true